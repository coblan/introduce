==========
自我评价
==========

专业知识
==========

1. 长期使用python，对python常用知识非常熟悉。对Django的常用组件非常熟悉，对admin模块比较熟悉。
2. 长期使用angular，Vuejs框架。对面向数据编程理解深刻。经常使用webpack等工具，对前端模块化有较为深刻的认知。
3. 融合前后端知识（1,2点），擅长制作web管理系统，app管理后台等。不仅如此，经常长期摸索，构建了高效开发与灵活的自有代码库。
4. 有多年c++/qt桌面开发经验，对c++/qt有知识足够的认知。使得我对python底层原理更加的清楚。

有本之木
=========
编程细节冗杂，耗费程序员大量精力，程序员往往并不具备丰富的数学物理知识，只能是无本之木，难以扩展自己的思维。

1. 学习了数学系与物理系的大量知识，使我具备强大的抽象与学习能力。
2. 常年接触数据处理，能够快速理解各种数值算法结构。
3. 年龄大，但是知识体系新。所有编程知识均为自学，而且敢于打破常规，优化组合，可见一斑。在互联网行业，这点尤其重要。

一些对比
==========


知识结构
	程序员是一个经常用脑的群体。但是往往知识结构单一，造成感觉空虚。
	
============ ============ ============
             普通程序员    我
知识结构     

普通程序员往往只熟悉都是无本之木，而我
喜欢接触新技术，新知识。对数学，物理等有深刻的理解。虽然年龄大，但是知识都比较新。

计算机编程细节冗杂，耗费程序员大量精力，挤占了对其他事物的思考。当度过探索的阶段，